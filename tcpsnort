#!/bin/bash

# Function for sniffing network traffic with limit
sniffer() {
    local host_ip="$1"
    local net_name="$2"
    local num_packet="$3"
    tcpdump -i "$net_name" \( icmp or tcp or udp \) and dst host "$host_ip" -w "$HOME/sniffing.pcap" -c "$num_packet"
}


# Function for analyzing network traffic
analysis() {
    SOURCE_DIR="$HOME/log"
    TARGET_DIR="$HOME/log/logs_old"
    ALERT_FILE="$SOURCE_DIR/alert"
    TARGET_FILE="$TARGET_DIR/alert.log"

    # Ensure the target directory exists
 

    # Run Snort analysis
    local path="$1"
    echo "Running Snort on ${path:-$HOME/sniffing.pcap}"
    snort -r "${path:-$HOME/sniffing.pcap}" -c /etc/snort/snort.conf -A full -l "$SOURCE_DIR"

    # Check if the alert file exists
    if [ -s "$ALERT_FILE" ]; then
	# Print The Result 
	cat "$ALERT_FILE"        
	# Move the alert file to the target directory
        mv "$ALERT_FILE" "$TARGET_FILE"
        # Print the path of the moved file
        echo "File moved successfully to $TARGET_FILE"
	echo "Suspicious Found !"
    else
        # Print no suspicious found message
	rm $ALERT_FILE
        echo "No Suspicious Found"
    fi
}

# Function to run the NIDS (Network Intrusion Detection System)
IDS() {
    snort -c /etc/snort/snort.conf -A console -l "$HOME/log/" -q
}

# Check for root privileges
if [ "$(id -u)" -ne "0" ]; then
    echo "This script must be run as root. Exiting."
    exit 1
fi

# Display menu and read user choice
echo " "
echo "████████╗ ██████╗██████╗    ███████╗███╗   ██╗ ██████╗ ██████╗ ████████╗
╚══██╔══╝██╔════╝██╔══██╗   ██╔════╝████╗  ██║██╔═══██╗██╔══██╗╚══██╔══╝
   ██║   ██║     ██████╔╝   ███████╗██╔██╗ ██║██║   ██║██████╔╝   ██║   
   ██║   ██║     ██╔═══╝    ╚════██║██║╚██╗██║██║   ██║██╔══██╗   ██║   
   ██║   ╚██████╗██║███████╗███████║██║ ╚████║╚██████╔╝██║  ██║   ██║   
   ╚═╝    ╚═════╝╚═╝╚══════╝╚══════╝╚═╝  ╚═══╝ ╚═════╝ ╚═╝  ╚═╝   ╚═╝
by S O M E O И E & Zaid
E-mail:someone0x00@proton.me
E-mail:zaid.h.hamzeh@gmail.com
"
mkdir -p "$HOME/log"
echo "Enter The Mode:"
echo "[1] Sniffing Mode"
echo "[2] Analysis Mode"
echo "[3] Detecting Mode"
read -p 'Mode: ' mode_from_user

# Execute based on user choice
case $mode_from_user in 
    '1')
        echo "Sniffing Mode Running"
        read -p 'Enter the IP address to capture from: ' ip_address
        read -p "Enter Network Card Interface name: " net_name
        read -p "How many packets to capture : " num_packet
	if  ! [[ "$num_packet" =~ ^[0-9]+$ ]]; then 

        while ! [[ "$num_packet" =~ ^[0-9]+$ ]];
	do           
 	read -p "How many packets to capture, Please enter valid number (1-999999):" num_packet
        done 
	else
            sniffer "$ip_address" "$net_name" "$num_packet"
            read -p "Analyze the captured file? (y/n): " option

            if [[ $option == 'y' ]]; then
                analysis "$HOME/sniffing.pcap"
            else 
                echo "Capture saved as 'sniffing.pcap'"
            fi
        fi
        ;;
    '2')
        echo "Analysis Mode Running"
        read -p "Pcap file path: " path
        analysis "$path"
        ;;
    '3')
        echo "NIDS Mode Running"
        IDS
        ;;
    *)
        echo "Invalid mode selected. Please choose [1], [2], or [3]."
        ;;
esac
